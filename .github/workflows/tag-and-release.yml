# When run:
# * runs tests to ensure that released version works.
# * tags a new release based on main top of tree.
# * builds a source bundle and uploads it into the release
# * builds binaries and uploads them into the release
#
# The workflow can be run manually, otherwise it runs once a week.
name: Tag and Release

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Setup bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: Checkout
        uses: actions/checkout@v3
      # TODO(filmil): Re-enable
      #- name: "Test"
        #run: "cd integration && bazel build //..."
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          generateReleaseNotes: true
      - name: Get release tag
        id: get_version
        run: echo "VERSION=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV
      - name: Get repo name
        id: get_repo_name
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      - name: "Publish source archive"
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: "${{ env.REPO_NAME }}-${{ env.VERSION }}.zip"
          exclusions: '*.git* /*node_modules/* .editorconfig /bazel-*'
      - name: "Upload source archive"
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          allowUpdates: true
          artifacts: "${{ env.REPO_NAME }}-${{ env.VERSION }}.zip"

  # This workflow waits for binary artifacts to be published.
  publish:
    needs: tag
    uses: ./.github/workflows/publish.yml
    with:
      tag_name: ${{ needs.tag.outputs.tag_name }}
    secrets:
      BCR_PUBLISH_TOKEN: ${{ secrets.BCR_PUBLISH_TOKEN }}

